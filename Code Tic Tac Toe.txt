def print_board(board):
    """Prints the Tic Tac Toe board."""
    print("-------------")
    for i in range(3):
        print(f"| {board[i][0]} | {board[i][1]} | {board[i][2]} |")
        print("-------------")

def get_move(player):
    """Asks the player for their move and returns it as a tuple."""
    row = int(input(f"Player {player}, enter row (0-2): "))
    col = int(input(f"Player {player}, enter column (0-2): "))
    return row, col

def check_win(board):
    """Checks if there is a winner or a tie, and returns the winner ('X' or 'O') or 'Tie'."""
    for i in range(3):
        # Check rows
        if board[i][0] == board[i][1] == board[i][2] != ' ':
            return board[i][0]
        # Check columns
        elif board[0][i] == board[1][i] == board[2][i] != ' ':
            return board[0][i]
    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] != ' ':
        return board[0][0]
    elif board[0][2] == board[1][1] == board[2][0] != ' ':
        return board[0][2]
    # Check for tie
    elif all([board[i][j] != ' ' for i in range(3) for j in range(3)]):
        return 'Tie'
    else:
        return None

def play_game():
    """Plays a game of Tic Tac Toe."""
    board = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]
    player = 'X'
    while True:
        print_board(board)
        row, col = get_move(player)
        if board[row][col] != ' ':
            print("Invalid move, try again.")
            continue
        board[row][col] = player
        winner = check_win(board)
        if winner:
            print_board(board)
            if winner == 'Tie':
                print("It's a tie!")
            else:
                print(f"Player {winner} wins!")
            return
        player = 'O' if player == 'X' else 'X'

play_game()
